These are the main reasons I want the sources kept secret for now:

(1) It's not ready for general consumption yet.  I don't want to be judged on
    code that I find lacking already myself.  Certain parts of the code aren't
    "clean enough" for my personal standards.  Granted, those standards may be
    higher than most people's, but that's why it's important to me that this
    project reflects my personal standards -- so it can be used as an example
    of what I can do, and what I consider good code.  It's not there yet, so I
    don't want it "out there" in any big way.

(2) If I do release the code without having an established userbase already,
    someone else can take my code and compete with me for users.  Then I could
    end up racing someone else enhancing my own code to compete for users.
    That's not the way to end up with quality code, which is paramount to me,
    as I said.  I don't want to set myself up for that situation.  If I had an
    established userbase like lily does, it would be less of an issue.  (Like
    I said before, having a userbase is essential to me, if I'm going to be
    motivated enough to work on the code.)

(3) Related to (1), I have some major _structural_ recoding to be done, that
    will require broad changes throughout the code.  Some of these structural
    changes might be as extensive as the structural changes involved in
    converting the code from C to C++ code.  With such wide-ranging changes
    coming, I don't want to have to integrate someone else's code during the
    restructuring process -- it's hard enough to re-integrate it now when I
    understand every line of code inside-out.  It would be that much harder
    with code I didn't write myself.

(4) Because the quality of the code is so important to me, (and it impacts
    directly on maintainability of the code) I'm wary of other developers with
    lower quality standards having direct access to the master sources.  Bugs
    in one part of the code might cause problems elsewhere, and design flaws
    can cripple things quickly.  If I do release the code, whether privately
    or publicly, I will want to maintain control over the master sources and
    approve any changes to them, possibly making or suggesting changes to make
    new code fit in with the old code.  (Obviously, if I release the source,
    other developers could maintain divergent trees if they don't agree with
    the decisions I make about *my* version of the sources.)

(5) While I'll probably want to release Phoenix as free software eventually,
    I haven't 100% ruled out the potential of commercial sales.  I don't
    *think* I want the hassle of selling it, but how do you be sure?
    Corporations, at least, pay lots of money for commercial "groupware",
    much of which may not be as good as lily or Phoenix...  (The solution
    there might be to release the sources freely to the public for
    non-commercial use, and require licenses for corporations or government
    to use it.)
